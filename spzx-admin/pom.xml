<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>spzx-server</artifactId>
        <groupId>com.spzx</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spzx_admin</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <!-- docker私服地址-->
        <docker.repository>121.41.52.4:1447</docker.repository>
        <docker.host>https://121.41.52.4:2376</docker.host>
        <!--项目名,需要和Harbor中的项目名称保持一致-->
        <docker.registry.name>spzx</docker.registry.name>
    </properties>

    <dependencies>

        <!-- spring boot web开发所需要的起步依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- redis的起步依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- mybatis的起步依赖 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>

        <!-- mysql驱动 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.0.33</version>
        </dependency>

        <!-- common-service依赖 -->
        <dependency>
            <groupId>com.spzx</groupId>
            <artifactId>common-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.4.3</version>
        </dependency>

        <dependency>
            <groupId>com.spzx</groupId>
            <artifactId>common-log</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.spzx</groupId>
            <artifactId>spzx-model</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>3.10.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.5.2</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.2.2</version>-->

<!--                <configuration>-->
<!--                    &lt;!&ndash; Docker 远程管理地址&ndash;&gt;-->
<!--                    <dockerHost>${docker.host}</dockerHost>-->

<!--                    &lt;!&ndash; Docker 推送镜像仓库地址&ndash;&gt;-->
<!--                    <registryUrl>${docker.repository}</registryUrl>-->

<!--                    &lt;!&ndash;指定生成的镜像名&ndash;&gt;-->
<!--                    <imageName>${docker.repository}/${docker.registry.name}/${project.artifactId}:${project.version}</imageName>-->

<!--                    &lt;!&ndash; 指定 dockerfile 路径&ndash;&gt;-->
<!--                    <dockerDirectory>${project.basedir}</dockerDirectory>-->

<!--                    &lt;!&ndash; 是否跳过docker构建 &ndash;&gt;-->
<!--                    <skipDockerBuild>false</skipDockerBuild>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->
</project>